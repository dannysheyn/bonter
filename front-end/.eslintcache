[{"C:\\Users\\Daniel\\Desktop\\FinalProject\\front-end\\src\\index.tsx":"1","C:\\Users\\Daniel\\Desktop\\FinalProject\\front-end\\src\\App.tsx":"2","C:\\Users\\Daniel\\Desktop\\FinalProject\\front-end\\src\\components\\sidebar.tsx":"3","C:\\Users\\Daniel\\Desktop\\FinalProject\\front-end\\src\\reportWebVitals.tsx":"4","C:\\Users\\Daniel\\Desktop\\FinalProject\\front-end\\src\\components\\pages\\build\\build.tsx":"5","C:\\Users\\Daniel\\Desktop\\FinalProject\\front-end\\src\\components\\pages\\build\\toolbox.tsx":"6","C:\\Users\\Daniel\\Desktop\\FinalProject\\front-end\\src\\components\\pages\\build\\nodeToolBox.tsx":"7","C:\\Users\\Daniel\\Desktop\\FinalProject\\front-end\\src\\components\\pages\\build\\ColorSelectorNode.js":"8","C:\\Users\\Daniel\\Desktop\\FinalProject\\front-end\\src\\components\\pages\\build\\customNode.tsx":"9","C:\\Users\\Daniel\\Desktop\\FinalProject\\front-end\\src\\components\\pages\\build\\edgeToolBox.tsx":"10"},{"size":502,"mtime":1612110420029,"results":"11","hashOfConfig":"12"},{"size":686,"mtime":1618851718468,"results":"13","hashOfConfig":"12"},{"size":2786,"mtime":1618755440494,"results":"14","hashOfConfig":"12"},{"size":376,"mtime":1618395539946,"results":"15","hashOfConfig":"12"},{"size":4936,"mtime":1619620935645,"results":"16","hashOfConfig":"12"},{"size":4072,"mtime":1618848107622,"results":"17","hashOfConfig":"12"},{"size":4201,"mtime":1619622480032,"results":"18","hashOfConfig":"12"},{"size":2337,"mtime":1619448510402,"results":"19","hashOfConfig":"12"},{"size":2230,"mtime":1619604117511,"results":"20","hashOfConfig":"12"},{"size":3511,"mtime":1619608285482,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"2m6hi9",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Daniel\\Desktop\\FinalProject\\front-end\\src\\index.tsx",[],["46","47"],"C:\\Users\\Daniel\\Desktop\\FinalProject\\front-end\\src\\App.tsx",[],"C:\\Users\\Daniel\\Desktop\\FinalProject\\front-end\\src\\components\\sidebar.tsx",["48","49","50","51","52","53"],"import logo from '../bot_logo_crop.jpg';\r\nimport React from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\n\r\n\r\nconst drawerWidth = 220;\r\n\r\nconst useStyles = makeStyles({\r\n    drawer :{\r\n        width: drawerWidth,\r\n    },\r\n    drawerPaper :{\r\n        width: drawerWidth,\r\n    },\r\n    root:{\r\n        display: 'flex'\r\n    },\r\n    active:{\r\n        background: '#f4f4f4'\r\n    }\r\n})\r\n\r\n\r\nconst Sidebar = () => {\r\n    const avatarWidth = 80;\r\n    const avatarHeight = 100;\r\n    const alt = 'bot logo';\r\n    const classes = useStyles();\r\n    //const location = useLocation();\r\n    const navbarLinks = [\r\n    {\r\n        text: 'Home',\r\n        icon: <HomeIcon/>,\r\n        path: '/'    \r\n    }, \r\n    {\r\n        text: 'Build',\r\n        icon: <BuildIcon/>,\r\n        path: '/build'\r\n    },\r\n    {   \r\n        text: 'Dashboard',\r\n        icon: <DashboardIcon/>,\r\n        path: '/dashboard'\r\n    }\r\n    ]\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Drawer\r\n            className={classes.drawer}\r\n            variant='permanent'\r\n            anchor='left'\r\n            classes={{ paper: classes.drawerPaper}}\r\n            >\r\n                <div>\r\n                    <Typography variant='h5'>\r\n                        Build\r\n                    </Typography>\r\n                </div>\r\n            <List>\r\n               {navbarLinks.map((item) => {return (\r\n               <ListItem \r\n                key={item.text} \r\n                button\r\n                //component='a'\r\n                href={item.path}\r\n                >\r\n                    <ListItemIcon>\r\n                        {item.icon}\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={item.text}/>\r\n                </ListItem>)\r\n               })}\r\n            </List>\r\n            </Drawer>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n\r\n// {/* <nav className=\"sidebar\">\r\n//                 <img src={logo} alt={alt} width={avatarWidth} height={avatarHeight}/>\r\n//                 <div className=\"links\">\r\n//                     <a href=\"/\">Home</a>\r\n//                     <a href=\"/\">Build</a>\r\n//                     <a href=\"/\">Dashboard</a>\r\n//                 </div>\r\n//             </nav> */}","C:\\Users\\Daniel\\Desktop\\FinalProject\\front-end\\src\\reportWebVitals.tsx",[],"C:\\Users\\Daniel\\Desktop\\FinalProject\\front-end\\src\\components\\pages\\build\\build.tsx",["54","55","56","57","58","59","60","61","62","63","64"],"C:\\Users\\Daniel\\Desktop\\FinalProject\\front-end\\src\\components\\pages\\build\\toolbox.tsx",["65","66","67","68","69","70","71","72","73"],"import React, { useState } from 'react'\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  }),\r\n);\r\n\r\n\r\n\r\nfunction getNode(numOfNodes : number): any{\r\n  let node = {\r\n      id: numOfNodes.toString(),\r\n      data: { label: 'Input Node' },\r\n      position: { x: 250, y: 25 },\r\n  }\r\n  return node;\r\n}\r\n\r\nconst Toolbox = (props: any) => {\r\n    let initialElements = props.initialNode;\r\n    let setElements = props.addNode;\r\n    let [idNum, onAddingNode] = useState(0);\r\n\r\n    return (\r\n        <div>\r\n                <Drawer\r\n          variant=\"permanent\"\r\n        >\r\n          <List>\r\n            {['Add Node'].map((text, index) => (\r\n              <ListItem button key={text} onClick={(e) => {\r\n                  let copyElemList : Array<Object> = [];\r\n                initialElements.forEach((elem : any) => {\r\n                  copyElemList.push(elem);\r\n                })\r\n                let max_id = 0;\r\n                copyElemList.forEach((element: any) => {\r\n                  let elem_id = parseInt(element.id)\r\n                  max_id = max_id < elem_id ? elem_id : max_id;  \r\n                })\r\n                let node = getNode(++max_id);\r\n                copyElemList.push(node);\r\n                setElements(copyElemList);\r\n              }}>\r\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                <ListItemText primary={text} />\r\n                {/* oninput={null} */}\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Toolbox;\r\n","C:\\Users\\Daniel\\Desktop\\FinalProject\\front-end\\src\\components\\pages\\build\\nodeToolBox.tsx",["74","75"],"C:\\Users\\Daniel\\Desktop\\FinalProject\\front-end\\src\\components\\pages\\build\\ColorSelectorNode.js",["76","77"],"C:\\Users\\Daniel\\Desktop\\FinalProject\\front-end\\src\\components\\pages\\build\\customNode.tsx",["78","79","80"],"import React, { memo, ReactNode } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Handle } from 'react-flow-renderer';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nconst useStyles = makeStyles({\r\n  buttonStyle: {\r\n  width: '150px',\r\n  height: '20px'\r\n    // borderRadius: 3,\r\n    // border: 0,\r\n    // color: 'white',\r\n    // height: 48,\r\n    // padding: '0 30px',\r\n    // boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  },\r\n  nodeStyle : \r\n  {\r\n    padding: '10px',\r\n    borderRadius: '3px',\r\n    width: '150px',\r\n    fontSize: '12px',\r\n    color: '#422e2e',\r\n    textAlign: 'center',\r\n    borderWidth: '1px',\r\n    borderStyle: 'solid',\r\n  }\r\n})\r\n\r\n\r\n\r\nexport default memo(({data} : any) => {\r\n  const classes = useStyles();\r\n  var handle_id = 97;\r\n  const buttonArray = data.buttonArray\r\n  const label = data.label\r\n   enum Position {\r\n    Left = \"left\",\r\n    Top = \"top\",\r\n    Right = \"right\",\r\n    Bottom = \"bottom\"\r\n  }\r\n\r\n  \r\n  return (\r\n    <>\r\n    <div className={classes.nodeStyle}>\r\n      <Grid container alignItems=\"center\" spacing={1} justify=\"center\">\r\n        <Grid item>\r\n          {label}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container alignItems=\"center\" spacing={1} justify=\"center\">\r\n      {\r\n          buttonArray.map((button : any) => {\r\n            return (\r\n              <Grid item >\r\n                <Button  variant=\"outlined\" size=\"small\" color=\"primary\" >\r\n                    <Handle\r\n                        type=\"source\"\r\n                        position={Position.Bottom}\r\n                        id={String.fromCharCode(handle_id++)}\r\n                        style={{ left: '50%' , background: '#555' }}\r\n                      />\r\n                      {button.text}\r\n                </Button>\r\n              </Grid>\r\n            )\r\n          })\r\n        }\r\n      </Grid>\r\n    </div>\r\n    </>\r\n  );\r\n});\r\n\r\n\r\n// <Grid container spacing={1}>\r\n// <Grid container item xs={12} spacing={3}>\r\n//   <FormRow />\r\n// </Grid>\r\n// <Grid container item xs={12} spacing={3}>\r\n//   <FormRow />\r\n// </Grid>\r\n// <Grid container item xs={12} spacing={3}>\r\n//   <FormRow />\r\n// </Grid>\r\n// </Grid>","C:\\Users\\Daniel\\Desktop\\FinalProject\\front-end\\src\\components\\pages\\build\\edgeToolBox.tsx",["81","82","83","84","85","86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":12},{"ruleId":"91","severity":1,"message":"95","line":3,"column":10,"nodeType":"93","messageId":"94","endLine":3,"endColumn":20},{"ruleId":"91","severity":1,"message":"96","line":3,"column":22,"nodeType":"93","messageId":"94","endLine":3,"endColumn":33},{"ruleId":"91","severity":1,"message":"97","line":35,"column":11,"nodeType":"93","messageId":"94","endLine":35,"endColumn":22},{"ruleId":"91","severity":1,"message":"98","line":36,"column":11,"nodeType":"93","messageId":"94","endLine":36,"endColumn":23},{"ruleId":"91","severity":1,"message":"99","line":37,"column":11,"nodeType":"93","messageId":"94","endLine":37,"endColumn":14},{"ruleId":"91","severity":1,"message":"100","line":1,"column":10,"nodeType":"93","messageId":"94","endLine":1,"endColumn":16},{"ruleId":"91","severity":1,"message":"101","line":2,"column":18,"nodeType":"93","messageId":"94","endLine":2,"endColumn":27},{"ruleId":"91","severity":1,"message":"102","line":4,"column":5,"nodeType":"93","messageId":"94","endLine":4,"endColumn":22},{"ruleId":"91","severity":1,"message":"103","line":7,"column":5,"nodeType":"93","messageId":"94","endLine":7,"endColumn":12},{"ruleId":"91","severity":1,"message":"104","line":8,"column":5,"nodeType":"93","messageId":"94","endLine":8,"endColumn":13},{"ruleId":"91","severity":1,"message":"105","line":9,"column":5,"nodeType":"93","messageId":"94","endLine":9,"endColumn":15},{"ruleId":"91","severity":1,"message":"95","line":16,"column":10,"nodeType":"93","messageId":"94","endLine":16,"endColumn":20},{"ruleId":"91","severity":1,"message":"96","line":16,"column":22,"nodeType":"93","messageId":"94","endLine":16,"endColumn":33},{"ruleId":"91","severity":1,"message":"106","line":19,"column":8,"nodeType":"93","messageId":"94","endLine":19,"endColumn":25},{"ruleId":"91","severity":1,"message":"107","line":111,"column":12,"nodeType":"93","messageId":"94","endLine":111,"endColumn":30},{"ruleId":"91","severity":1,"message":"108","line":111,"column":32,"nodeType":"93","messageId":"94","endLine":111,"endColumn":53},{"ruleId":"91","severity":1,"message":"109","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":19},{"ruleId":"91","severity":1,"message":"110","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":14},{"ruleId":"91","severity":1,"message":"111","line":6,"column":8,"nodeType":"93","messageId":"94","endLine":6,"endColumn":15},{"ruleId":"91","severity":1,"message":"112","line":8,"column":8,"nodeType":"93","messageId":"94","endLine":8,"endColumn":18},{"ruleId":"91","severity":1,"message":"113","line":9,"column":8,"nodeType":"93","messageId":"94","endLine":9,"endColumn":15},{"ruleId":"91","severity":1,"message":"114","line":15,"column":10,"nodeType":"93","messageId":"94","endLine":15,"endColumn":20},{"ruleId":"91","severity":1,"message":"115","line":20,"column":7,"nodeType":"93","messageId":"94","endLine":20,"endColumn":16},{"ruleId":"91","severity":1,"message":"116","line":98,"column":10,"nodeType":"93","messageId":"94","endLine":98,"endColumn":15},{"ruleId":"91","severity":1,"message":"117","line":98,"column":17,"nodeType":"93","messageId":"94","endLine":98,"endColumn":29},{"ruleId":"91","severity":1,"message":"114","line":6,"column":10,"nodeType":"93","messageId":"94","endLine":6,"endColumn":20},{"ruleId":"91","severity":1,"message":"118","line":63,"column":9,"nodeType":"93","messageId":"94","endLine":63,"endColumn":24},{"ruleId":"119","severity":1,"message":"120","line":4,"column":10,"nodeType":"93","messageId":"94","endLine":4,"endColumn":22},{"ruleId":"119","severity":1,"message":"121","line":4,"column":24,"nodeType":"93","messageId":"94","endLine":4,"endColumn":29},{"ruleId":"91","severity":1,"message":"122","line":1,"column":23,"nodeType":"93","messageId":"94","endLine":1,"endColumn":32},{"ruleId":"91","severity":1,"message":"120","line":4,"column":10,"nodeType":"93","messageId":"94","endLine":4,"endColumn":22},{"ruleId":"91","severity":1,"message":"121","line":4,"column":24,"nodeType":"93","messageId":"94","endLine":4,"endColumn":29},{"ruleId":"91","severity":1,"message":"114","line":7,"column":10,"nodeType":"93","messageId":"94","endLine":7,"endColumn":20},{"ruleId":"91","severity":1,"message":"123","line":7,"column":45,"nodeType":"93","messageId":"94","endLine":7,"endColumn":52},{"ruleId":"91","severity":1,"message":"124","line":8,"column":8,"nodeType":"93","messageId":"94","endLine":8,"endColumn":11},{"ruleId":"91","severity":1,"message":"125","line":9,"column":8,"nodeType":"93","messageId":"94","endLine":9,"endColumn":15},{"ruleId":"91","severity":1,"message":"126","line":46,"column":28,"nodeType":"93","messageId":"94","endLine":46,"endColumn":45},{"ruleId":"91","severity":1,"message":"118","line":49,"column":9,"nodeType":"93","messageId":"94","endLine":49,"endColumn":24},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'useLocation' is defined but never used.","'avatarWidth' is assigned a value but never used.","'avatarHeight' is assigned a value but never used.","'alt' is assigned a value but never used.","'Button' is defined but never used.","'useEffect' is defined but never used.","'ReactFlowProvider' is defined but never used.","'MiniMap' is defined but never used.","'Controls' is defined but never used.","'Background' is defined but never used.","'ColorSelectorNode' is defined but never used.","'SidebarEdgeClicked' is assigned a value but never used.","'setSidebarEdgeClicked' is assigned a value but never used.","'CssBaseline' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'Divider' is defined but never used.","'IconButton' is defined but never used.","'useStyles' is assigned a value but never used.","'idNum' is assigned a value but never used.","'onAddingNode' is assigned a value but never used.","'initialElements' is assigned a value but never used.","no-unused-vars","'createStyles' is defined but never used.","'Theme' is defined but never used.","'ReactNode' is defined but never used.","'Tooltip' is defined but never used.","'Fab' is defined but never used.","'AddIcon' is defined but never used.","'setAddButtonClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]